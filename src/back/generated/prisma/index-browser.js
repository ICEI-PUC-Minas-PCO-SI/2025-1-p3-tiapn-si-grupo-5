
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ChamadoScalarFieldEnum = {
  idChamado: 'idChamado',
  protocolo: 'protocolo',
  assunto: 'assunto',
  descricao: 'descricao',
  dataAbertura: 'dataAbertura',
  dataAtualizacao: 'dataAtualizacao',
  dataFechamento: 'dataFechamento',
  idSolicitante: 'idSolicitante',
  idAnalista: 'idAnalista',
  idTipoChamado: 'idTipoChamado',
  idStatus: 'idStatus',
  idPrioridade: 'idPrioridade'
};

exports.Prisma.GerenciaScalarFieldEnum = {
  idGerencia: 'idGerencia',
  nomeGerencia: 'nomeGerencia',
  ativo: 'ativo'
};

exports.Prisma.LogatividadeScalarFieldEnum = {
  idLog: 'idLog',
  descricao: 'descricao',
  dataHora: 'dataHora',
  idUsuario: 'idUsuario'
};

exports.Prisma.MsgchamadoScalarFieldEnum = {
  idMensagem: 'idMensagem',
  mensagem: 'mensagem',
  timestamp: 'timestamp',
  remetente: 'remetente',
  urlAnexo: 'urlAnexo',
  nomeArquivo: 'nomeArquivo',
  idChamado: 'idChamado',
  idRemetente: 'idRemetente'
};

exports.Prisma.NotificacaoScalarFieldEnum = {
  idNotificacao: 'idNotificacao',
  titulo: 'titulo',
  mensagem: 'mensagem',
  lida: 'lida',
  dataHora: 'dataHora',
  idUsuario: 'idUsuario',
  idChamado: 'idChamado'
};

exports.Prisma.PrioridadechamadoScalarFieldEnum = {
  idPrioridade: 'idPrioridade',
  nomePrioridade: 'nomePrioridade',
  ativo: 'ativo',
  hexCorPrimaria: 'hexCorPrimaria',
  hexCorSecundaria: 'hexCorSecundaria'
};

exports.Prisma.StatuschamadoScalarFieldEnum = {
  idStatus: 'idStatus',
  nomeStatus: 'nomeStatus',
  ativo: 'ativo',
  hexCorPrimaria: 'hexCorPrimaria',
  hexCorSecundaria: 'hexCorSecundaria'
};

exports.Prisma.TipochamadoScalarFieldEnum = {
  idTipoChamado: 'idTipoChamado',
  nomeTipo: 'nomeTipo',
  ativo: 'ativo'
};

exports.Prisma.TipousuarioScalarFieldEnum = {
  idTipoUsuario: 'idTipoUsuario',
  tipoUsuario: 'tipoUsuario'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  idUsuario: 'idUsuario',
  matricula: 'matricula',
  nomeUsuario: 'nomeUsuario',
  email: 'email',
  senha: 'senha',
  dataCadastro: 'dataCadastro',
  ativo: 'ativo',
  ramal: 'ramal',
  fotoPerfil: 'fotoPerfil',
  idGerencia: 'idGerencia',
  idTipoUsuario: 'idTipoUsuario'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.chamadoOrderByRelevanceFieldEnum = {
  protocolo: 'protocolo',
  assunto: 'assunto',
  descricao: 'descricao'
};

exports.Prisma.gerenciaOrderByRelevanceFieldEnum = {
  nomeGerencia: 'nomeGerencia'
};

exports.Prisma.logatividadeOrderByRelevanceFieldEnum = {
  descricao: 'descricao'
};

exports.Prisma.msgchamadoOrderByRelevanceFieldEnum = {
  mensagem: 'mensagem',
  urlAnexo: 'urlAnexo',
  nomeArquivo: 'nomeArquivo'
};

exports.Prisma.notificacaoOrderByRelevanceFieldEnum = {
  titulo: 'titulo',
  mensagem: 'mensagem'
};

exports.Prisma.prioridadechamadoOrderByRelevanceFieldEnum = {
  nomePrioridade: 'nomePrioridade',
  hexCorPrimaria: 'hexCorPrimaria',
  hexCorSecundaria: 'hexCorSecundaria'
};

exports.Prisma.statuschamadoOrderByRelevanceFieldEnum = {
  nomeStatus: 'nomeStatus',
  hexCorPrimaria: 'hexCorPrimaria',
  hexCorSecundaria: 'hexCorSecundaria'
};

exports.Prisma.tipochamadoOrderByRelevanceFieldEnum = {
  nomeTipo: 'nomeTipo'
};

exports.Prisma.tipousuarioOrderByRelevanceFieldEnum = {
  tipoUsuario: 'tipoUsuario'
};

exports.Prisma.usuarioOrderByRelevanceFieldEnum = {
  matricula: 'matricula',
  nomeUsuario: 'nomeUsuario',
  email: 'email',
  senha: 'senha',
  ramal: 'ramal',
  fotoPerfil: 'fotoPerfil'
};
exports.msgchamado_remetente = exports.$Enums.msgchamado_remetente = {
  usuario: 'usuario',
  analista: 'analista',
  gestor: 'gestor'
};

exports.Prisma.ModelName = {
  chamado: 'chamado',
  gerencia: 'gerencia',
  logatividade: 'logatividade',
  msgchamado: 'msgchamado',
  notificacao: 'notificacao',
  prioridadechamado: 'prioridadechamado',
  statuschamado: 'statuschamado',
  tipochamado: 'tipochamado',
  tipousuario: 'tipousuario',
  usuario: 'usuario'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
